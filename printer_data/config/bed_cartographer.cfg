##################################################
############     BED CONFIGURATION     ###########
##################################################

[heater_bed]
heater_pin: PA1  # Define the pin (PA1) controlling the bed heater.
sensor_pin: PF4  # Define the pin (PF4) used for reading the temperature sensor.
sensor_type: EPCOS 100K B57560G104F  # Specify the type of temperature sensor used (EPCOS 100K thermistor).
control: pid  # Use PID control for maintaining bed temperature.
pid_Kp: 24.910 
pid_Ki: 0.548 
pid_Kd: 283.035
max_power: 0.95  # Limit the maximum power to 95% to prevent overheating.
pwm_cycle_time: 0.0166  # Set the PWM cycle time to 16.6 milliseconds.
min_temp: 0  # Set the minimum allowed bed temperature to 0°C.
max_temp: 150  # Set the maximum allowed bed temperature to 150°C.

#[homing_override]
#set_position_x: 0         # Set initial X position to 0
#set_position_y: 0         # Set initial Y position to 0
#set_position_z: 0         # Set initial Z position to 0
#gcode:
#    G91                   # Switch to relative positioning mode
#    G1 Z10 F2000          # Move the Z axis down by 10 mm at a speed of 2000 mm/min
#    G90                   # Switch back to absolute positioning mode
#    G28 Y                 # Perform homing on the Y axis
#    G28 X                 # Perform homing on the X axis
#    G1 X143 Y120 F42000   # Move to the center of the bed (X=143, Y=120) at 700 mm/s (42000 mm/min)
#    G28 Z                 # Perform homing on the Z axis
#    G91                   # Switch to relative positioning mode again
#    G1 Z5 F2000           # Move the Z axis down by 5 mm at a speed of 2000 mm/min
#    G90                   # Switch back to absolute positioning mode
#axes: xyz                 # Specify that this override applies to all three axes (X, Y, Z)

[safe_z_home]
home_xy_position: 140, 140  # Define the safe position (X=140, Y=140) for homing the Z-axis.
speed: 800  # Set the speed for moving to the home position to 800 mm/min.
z_hop: 10  # Raise the Z-axis by 10mm before homing to avoid collisions with the bed or printed part.

#####################################################################
# 	Bed Mesh Calibrate
#####################################################################

[bed_mesh] 
speed: 500
horizontal_move_z: 1
mesh_min: 0, 30
mesh_max: 285, 270
probe_count: 15,15 
mesh_pps: 3,3
algorithm: bicubic
bicubic_tension: 0.1
fade_start: 1
fade_end: 5
fade_target: 0
adaptive_margin: 5
zero_reference_position: 140, 140

#####################################################################
# 	Bed Z Tilt
#####################################################################
[z_tilt] 
z_positions: #Nozzle to GE5C
  -80,  -20
  143, 355
  350, -20
points:
  5, 5 #15, 5
  5, 240  #15, 240
  285, 240  #275, 240
  285, 5 #275, 5
speed: 600
horizontal_move_z: 5
retries: 10
retry_tolerance: 0.085

#####################################################################
# 	Bed Screws Adjust
#####################################################################
[bed_screws]
screw1: 0,0 ## front left screw
screw2: 250,0 ## front right screw
screw3: 250,240 ## rear right screw
screw4: 0,240 ##rear left screw

[screws_tilt_adjust]
screw1: -5, 30
screw1_name: front left screw
screw2: 155, 30
screw2_name: front right screw
screw3: 155, 190
screw3_name: rear right screw
screw4: -5, 190
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 125

[gcode_macro RANDOM_CENTER_TAP_POSITION]
gcode: 
  {% set x_min = printer["toolhead"].axis_minimum.x %}  # Get the minimum X axis limit.
  {% set x_max = printer["toolhead"].axis_maximum.x %}  # Get the maximum X axis limit.
  {% set y_min = printer["toolhead"].axis_minimum.y %}  # Get the minimum Y axis limit.
  {% set y_max = printer["toolhead"].axis_maximum.y %}  # Get the maximum Y axis limit.
  {% set midpoint_x = (x_min + x_max) / 2 %}  # Calculate the midpoint of the X axis.
  {% set midpoint_y = (y_min + y_max) / 2 %}  # Calculate the midpoint of the Y axis.
  {% set random_number = (range(-10, 10) | random) %}  # Generate a random number between -10 and 10.
  {% set X = (midpoint_x + random_number)|int %}  # Calculate a random X coordinate near the midpoint.
  {% set Y = (midpoint_y + random_number)|int %}  # Calculate a random Y coordinate near the midpoint.
  G0 X{X} Y{Y}  # Move the toolhead to the calculated random X and Y position.
  M400  # Wait for all moves to complete.
  CARTO_TOUCH METHOD=touch TOUCH_LOCATION_X={X} TOUCH_LOCATION_X={Y} FUZZY_TOUCH=5  # Perform a touch probe at the random location with specified tolerance.